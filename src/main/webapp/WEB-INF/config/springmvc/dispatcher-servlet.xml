<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    
	<context:component-scan base-package="com.eduDashboardProject" />
	
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 모든요청이 인터셉터를 거치도록 작성  -->
			<mvc:mapping path="/**"/>
			<bean class="com.eduDashboardProject.common.LoginAuth"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/favicon.ico" location="/WEB-INF/img/common/favicon.ico" />
	
	<mvc:annotation-driven />
	
	<aop:aspectj-autoproxy/>
	
	<tx:annotation-driven proxy-target-class="false" transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceSpied"></property>
	</bean>
	
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		 <tx:attributes>
		 <!--이름이 select로 시작하는 모든 메서드  -->
		 <!-- custom Exception 이 발생했을 때 트랜잭션 관리를 스프링으로 하기 위해서는 해당 exception에 Exception을 상속받고 있더라도
		 	정확하게 rollback-for 속성에 해당 Exception을 등록을 해줘야한다
		   -->
		 	<tx:method name="select*"/>
		 	<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception, com.eduDashboardProject.common.CustomException"/>
		 	<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception, com.eduDashboardProject.common.CustomException"/>
		 	<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception, com.eduDashboardProject.common.CustomException"/>
		 	<tx:method name="get*" propagation="REQUIRED" rollback-for="Exception, com.eduDashboardProject.common.CustomException"/>
		 </tx:attributes>
	
	</tx:advice>
	
	
	<aop:config>
		<aop:pointcut expression="execution(* com.eduDashboardProject..*.*ServiceImpl.*(..))" id="requiredTx"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx"/>
	</aop:config>
	
</beans>